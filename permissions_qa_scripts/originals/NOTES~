Order JSON output

SWAP


print (json.dumps(response.json(), {'4': 5, '6': 7}, sort_keys=True, indent=4, separators=(',', ': ')))
{
    "4": 5,
    "6": 7
}



TEST FILE UPLOAD
python aws.ec251.submit.py | grep download | sed -e 's#^.*download/##' | sed -e 's#.fast.*$##' > swap
swapFF=$(cat swap); echo "perl -p -i -e 's#SWAP#$swapFF#g' File.Curl.Wget.ADMIN" > script
chmod 700 script
./script
./File.Curl.Wget.ADMIN


python submit_fastq.py | grep download | sed -e 's#^.*download/##' | sed -e 's#.fast.*$##' > swap; swapFF=$(cat swap); echo "perl -p -i -e 's#SWAP#$swapFF#g' File.Curl.Wget.ADMIN" > script ; chmod 700 script; ./script ; ./File.Curl.Wget.ADMIN




TEST POSTING 
for i in {1..3}; do echo " ####### this is encoded.test$i posting an experiment #############"; ./Experiment.Post.$i | grep status; done

TEST PATCHING and GET simultaneously 
for j in $(cat LIST); do echo >> log; echo >> log; echo "-------------- This is setting status of ENCSR000CUS to--> $j <-----------------" >> log; ./Admin.Edit.Experiment.ENCSR000CUS.$j | grep status >> log; echo >> log; echo >> log; for i in {1..3}; do echo "######################### $j encoded.test$i PATCH #####################" >> log; ./Experiment.Patch.ENCSR000CUS.encoded.test$i | grep status >> log; done ; echo >> log; for g in {1..3}; do echo " >>>>>>>>>>>>>>>>>>>>>>>>>>GET attempt by encoded.test$g" >> log ; ./Get.$g | grep status | head -1 >> log ; done done; less log




for j in $(cat LIST); do echo >> log; echo >> log; echo "--------------    This is setting status of ENCSR000CUS to-->  $j <-----------------" >> log; ./Admin.Edit.Experiment.ENCSR000CUS.$j | grep status >> log; echo >> log; echo >> log; for i in {1..3}; do echo "#########################  $j  encoded.test$i #####################" >> log; ./Experiment.ENCSR000CUS.revoked.encoded.test$i | grep status >> log; done ;done


-----

do echo; echo; echo "--------------    This is setting status of ENCSR000CUS to-->  $j <-----------------"; ./Admin.Edit.Experiment.ENCSR000CUS.$j | grep status; echo; echo; for i in {1..3}; do echo "#########################   encoded.test$i #####################"; ./Experiment.ENCSR000CUS.revoked.encoded.test$i | grep status; done ;done 





for i in {1..3}; do echo "#########################   encoded.test$i #####################"; ./Experiment.ENCSR000CUS.revoked.encoded.test$i | grep status; done




NOTES TO SELF:
Replaced must come last. 

Once ENCSR000CUS is replaced you can only access it via its uuid:  35f91f16-dcef-4ab2-90bd-3928b0db9a60, i.e.
https://test.encodedcc.org/35f91f16-dcef-4ab2-90bd-3928b0db9a60 
ENCFF002BYE FILE:
https://test.encodedcc.org/files/4dc1fbd3-6692-42fa-b710-03eaba9263c1
NOTE: Chrome may act like a jerk and prevent you from accessing, open a fresh browser.

---to restart:
ENCSR000CUS
REPLACEME/35f91f16-dcef-4ab2-90bd-3928b0db9a60
REPLACEME/experiments/ENCSR035DLJ/#!edit-json              ENCSR035DLJ  (alternate accession needs removing)
REPLACEME/63db09bf-69b8-4b1f-9dd7-6c5ea6cdf6f4

ENCFF002BYE
REPLACEME/files/4dc1fbd3-6692-42fa-b710-03eaba9263c1



for i in $(cat LIST); do ./Admin.Edit.Experiment.ENCSR000CUS.$i | grep status; done

LIST CONTAINS:

in_progress
started
verified
submitted
preliminary
proposed
release_ready
released
deleted
revoked
replaced

